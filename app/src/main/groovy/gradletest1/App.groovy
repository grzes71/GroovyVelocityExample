/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package gradletest1

import org.apache.velocity.app.Velocity
import org.apache.velocity.VelocityContext
import org.apache.velocity.Template
import org.apache.velocity.app.VelocityEngine

/**
 * Example application class
 */
class App {

    static void main(String[] args) {
        if (args.length == 2) {
            new App().processTemplate(args[0], args[1])
        } else {
            println("Error: $args.length arguments provided")
        }
    }

    /**
     * Process the template
     */
    void processTemplate(String templateDir, String templateName) {
        /* Lets make a Context and put data into it */
        VelocityContext context = new VelocityContext()
        context.put('name', 'Velocity')
        context.put('project', 'Jakarta')

        /* Create an engine */
        VelocityEngine engine = new VelocityEngine()
        Properties props = new Properties()
        props.setProperty('file.resource.loader.path', templateDir)
        engine.init(props)

        /* Render a template */
        StringWriter writer = new StringWriter()
        Template template = engine.getTemplate(templateName)
        template.merge(context, writer)
        println("Template : $writer")

        /* Lets make a string to render */
        String someString = 'We are using $project $name to render this.'
        writer = new StringWriter()
        engine.evaluate(context, writer, 'mystring', someString)
        println("String : $writer")
    }

}
